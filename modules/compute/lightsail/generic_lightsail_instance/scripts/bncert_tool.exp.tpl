#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Aug 30 13:43:56 2024
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

# Removido o force conservative devido a conflito com templatefile.


#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn /opt/bitnami/bncert-tool
match_max 100000
expect -exact "----------------------------------------------------------------------------\r\r
Welcome to the Bitnami HTTPS Configuration tool.\r\r
\r\r
----------------------------------------------------------------------------\r\r
Domains\r\r
\r\r
Please provide a valid space-separated list of domains for which you wish to \r\r
configure your web server.\r\r
\r\r
Domain list \[\]: "
send -- "brunoferreira86dev.com\r"
expect -exact "brunoferreira86dev.com\r
\r\r
The following domains were not included: www.brunoferreira86dev.com. Do you want to add them? \[Y/n\]: "
send -- "y\r"
expect -exact "y\r
\r\r
----------------------------------------------------------------------------\r\r
Enable/disable redirections\r\r
\r\r
Please select the redirections you wish to enable or disable on your Bitnami \r\r
installation.\r\r
\r\r
\r\r
\r\r
Enable HTTP to HTTPS redirection \[Y/n\]: "
send -- "y\r"
expect -exact "y\r
\r\r
\r\r
\r\r
\r\r
Enable non-www to www redirection \[Y/n\]: "
send -- "n\r"
expect -exact "n\r
\r\r
\r\r
\r\r
\r\r
Enable www to non-www redirection \[y/N\]: "
send -- "y\r"
expect -exact "y\r
\r\r
\r\r
----------------------------------------------------------------------------\r\r
Changes to perform\r\r
\r\r
The following changes will be performed to your Bitnami installation:\r\r
\r\r
1. Stop web server\r\r
2. Configure web server to use a free Let's Encrypt certificate for the domains: \r\r
brunoferreira86dev.com www.brunoferreira86dev.com\r\r
3. Configure a cron job to automatically renew the certificate each month\r\r
4. Configure web server name to: brunoferreira86dev.com\r\r
5. Enable HTTP to HTTPS redirection (example: redirect \r\r
http://brunoferreira86dev.com to https://brunoferreira86dev.com)\r\r
6. Enable www to non-www redirection (example: redirect \r\r
www.brunoferreira86dev.com to brunoferreira86dev.com)\r\r
7. Start web server once all changes have been performed\r\r
\r\r
\r\r
\r\r
Do you agree to these changes? \[Y/n\]: "
send -- "y\r"
expect "*\r"
sleep 1
send -- "brunoferreira86dev@gmail.com\r"
expect "*\r"
sleep 1
send -- "y\r"
expect "*\r"
sleep 1
send -- "\r"
expect eof
